#!/bin/bash

# Helper functions
. .fun
os
hostip

# Proxy settings [optional] - set if your network requires a proxy to connect to the Internet
#export httpProxyHost=proxy.research.ge.com
#export httpProxyPort=8080
#export http_proxy=http://${httpProxyHost}:${httpProxyPort}
#export httpsProxyHost=$httpProxyHost
#export httpsProxyPort=$httpProxyPort
#export https_proxy=$http_proxy
#export no_proxy=${HOST_IP},localhost
#export nonProxyHosts="${HOST_IP}|localhost"

# Docker build settings
## REGISTRY [optional] - specify to override the default registry, include "/" at the end.
export REGISTRY=

## TAG [optional] - specify to override the default "latest" tag, include ":" at the beginning.
export TAG=

# Docker container runtime settings
## COMPOSE_PROJECT_NAME [optional] - prefix for container names in composition
export COMPOSE_PROJECT_NAME=host

## Volume map [optional] - Mapping of external to internal paths including the -v switch. Example $(pwd):/wd
export VOL_MAP="-v $(pwd):/wd -v $(pwd)/../../.m2:/root/.m2"

## RUN_OPTS [optional] - additional options to specify with the run comman. Example -e POSTGRES_DB=dbname
export RUN_OPTS="-e http_proxy=$http_proxy -e https_proxy=$https_proxy -e no_proxy=$no_proxy -e httpProxyHost=$httpProxyHost -e httpProxyPort=$httpProxyPort -e httpsProxyHost=$httpsProxyHost -e httpsProxyPort=$httpsProxyPort -e nonProxyHosts=$nonProxyHosts"

## MVN_IMAGE - specify the name of the Docker image to use for building the source code
#export MVN_IMAGE=ge-maven:3.5.3-jdk-8
export MVN_IMAGE=maven:3.5.3-jdk-8

## JVM_OPTIONS [optional] values specified here will be passed to java processes
JVM_OPTIONS="-Xmx20G -Xincgc"

# Services
## semtk-sparqlgraph-status service
export PORT_SPARQLGRAPH_STATUS_SERVICE=12051
export CONFIG_SPARQLGRAPH_STATUS_SERVICE=/service/status.properties
export statusJobEndpointType=virtuoso
export statusJobEndpointDomain=http://research.ge.com
export statusJobEndpointServerUrl=http://${HOST_IP}:2420
export statusJobEndpointDataset=http://research.ge.com/semtk/services
export statusJobEndpointUsername=dba
export statusJobEndpointPassword=dba
export statusJobMaxWaitMsec=300000
export statusLoggingEnabled=NO
export statusLoggingProtocol=http
export statusLoggingServer=${HOST_IP}
export statusLoggingPort=9092
export statusLoggingServiceLocation=/Logging/usageLog
export statusApplicationLogName=StatusService

## semtk-sparqlgraph-results service
export PORT_SPARQLGRAPH_RESULTS_SERVICE=12052
export CONFIG_SPARQLGRAPH_RESULTS_SERVICE=/service/results.properties
export resultsCleanUpThreadsEnabled=YES
export resultsCleanUpThreadsFrequency=480
export resultsJobEndpointType=virtuoso
export resultsJobEndpointDomain=http://research.ge.com
export resultsJobEndpointServerUrl=http://${HOST_IP}:2420
export resultsJobEndpointDataset=http://research.ge.com/semtk/services
export resultsJobEndpointUsername=dba
export resultsJobEndpointPassword=dba
export resultsLoggingEnabled=YES
export resultsLoggingProtocol=http
export resultsLoggingServer=${HOST_IP}
export resultsLoggingPort=9092
export resultsLoggingServiceLocation=/Logging/usageLog
export resultsApplicationLogName=ResultsService
export resultsBaseURL=http://${HOST_IP}:8080/DISPATCH_RESULTS
export resultsServiceURL=http://${HOST_IP}:12052/results
export resultsFileLocation=/service/DISPATCH_RESULTS
export resultsSampleLines=100

## semtk-dispatch service
export PORT_DISPATCH_SERVICE=12053
export CONFIG_DISPATCH_SERVICE=/service/dispatch.properties
export LOCATION_ADDITIONAL_DISPATCHER_JARS=""
export dispatchSparqlServiceServer=${HOST_IP}
export dispatchSparqlServicePort=12050
export dispatchSparqlServiceProtocol=http
export dispatchSparqlServiceEndpoint=/sparqlQueryService/query
export dispatchEdcSparqlServerAndPort=http://${HOST_IP}:2420
export dispatchEdcSparqlServerDataset=http://research.ge.com/semtk/services
export dispatchEdcSparqlServerType=virtuoso
export dispatchResultsServiceProtocol=http
export dispatchResultsServiceServer=${HOST_IP}
export dispatchResultsServicePort=12052
export dispatchStatusServiceProtocol=http
export dispatchStatusServiceServer=${HOST_IP}
export dispatchStatusServicePort=12051
export dispatchDispatcherClassName=com.ge.research.semtk.sparqlX.asynchronousQuery.AsynchronousNodeGroupDispatcher


## semtk-hive service
export PORT_HIVE_SERVICE=12055
export CONFIG_HIVE_SERVICE=/service/hive.properties
export hiveUsername=hive
export hivePassword=password

## semtk-oracle service
export PORT_ORACLE_SERVICE=none

## semtk-nodegroup-store service
export PORT_NODEGROUPSTORE_SERVICE=12056
export CONFIG_NODEGROUPSTORE_SERVICE=/service/store.properties
export storeIngestorLocation=${HOST_IP}
export storeIngestorPort=12091
export storeTemplateLocation=/service/store.json
export storeIngestorProtocol=http
export storeSparqlServiceServer=${HOST_IP}
export storeSparqlServicePort=12050
export storeSparqlServiceProtocol=http
export storeSparqlServiceEndpoint=/sparqlQueryService/queryAuth
export storeSparqlServerAndPort=http://${HOST_IP}:2420
export storeSparqlServerDataSet=http://research.ge.com/knowledge/prefab/data
export storeSparqlServerType=virtuoso
export storeSparqlServiceUser=dba
export storeSparqlServicePass=dba

## semtk-nodegroup-execution service
export PORT_NODEGROUPEXECUTION_SERVICE=12058
export CONFIG_EXEC_SERVICE=/service/exec.properties
export nodeGroupExecutionNgStoreProtocol=http
export nodeGroupExecutionNgStoreServer=${HOST_IP}
export nodeGroupExecutionNgStorePort=12056
export nodeGroupExecutionDispatchProtocol=http
export nodeGroupExecutionDispatchServer=${HOST_IP}
export nodeGroupExecutionDispatchPort=12053
export nodeGroupExecutionResultsProtocol=http
export nodeGroupExecutionResultsServer=${HOST_IP}
export nodeGroupExecutionResultsPort=12052
export nodeGroupExecutionStatusProtocol=http
export nodeGroupExecutionStatusServer=${HOST_IP}
export nodeGroupExecutionStatusPort=12051
export nodeGroupExecutionIngestProtocol=http
export nodeGroupExecutionIngestServer=${HOST_IP}
export nodeGroupExecutionIngestPort=12091

## semtk-nodegroup service
export PORT_NODEGROUP_SERVICE=12059

## semtk-ontology-info service
export PORT_ONTOLOGYINFO_SERVICE=12057
export CONFIG_ONTOLOGYINFO_SERVICE=/service/ontologyinfo.properties
export oinfoServerType=
export oinfoServerURL=
export oinfoLoggingEnabled=NO
export oinfoLoggingProtocol=http
export oinfoLoggingServer=${HOST_IP}
export oinfoLoggingPort=9092
export oinfoLoggingServiceLocation=/Logging/usageLog
export oinfoApplicationLogName=OntologyInfoService

## semtk-sparql-query service
export PORT_SPARQL_QUERY_SERVICE=12050
export CONFIG_SPARQL_QUERY_SERVICE=/service/sparqlqueryservice.properties
export triplestoreServerType=virtuoso
export triplestoreServerAndPort=http://${HOST_IP}:2420

## semtk-ingestion service
export PORT_INGESTION_SERVICE=12091
export CONFIG_INGESTION_SERVICE=/service/ingest.properties
export ingestionSparqlUserName=dba
export ingestionSparqlPassword=dba
export ingestionBatchSize=16
export ingestionLoggingEnabled=NO
export ingestionLoggingProtocol=http
export ingestionLoggingServer=${HOST_IP}
export ingestionLoggingPort=9092
export ingestionLoggingServiceLocation=/Logging/usageLog
export ingestionApplicationName=IngestionService

## semtk-sparqlgraph-web
export PORT_SPARQLGRAPH_WEB=8860
export INGEST_URL=http://${HOST_IP}:12091/ingestion/
export QUERY_URL=http://${HOST_IP}:12050/sparqlQueryService/

## semtk-utility service
# placeholder for when this service is created
export PORT_UTILITY_SERVICE=12060
 
