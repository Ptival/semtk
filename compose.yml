version: '3'

services:

  semtk-sparqldb:
    build:
      context: ./sparqlDB
      dockerfile: Dockerfile
      args:
        http_proxy: $http_proxy
        https_proxy: $https_proxy
    image: ${REGISTRY}semtk-sparqldb${TAG}
    environment:
      - http_proxy
      - https_proxy
      - no_proxy
      - DBA_PASSWORD=${PWD_SPARQLDB}
      - GRAPH_SPARQL_UPDATE=true
      - DEFAULT_GRAPH=http://research.ge.com
      - VIRT_Parameters_DirsAllowed=/
      - VIRT_SPARQL_MaxQueryCostEstimationTime=40000
      - VIRT_SPARQL_MaxQueryExecutionTime=300
    ports:
      - ${PORT_SPARQLDB}:8890
      - 1111:1111
    volumes:
      - ${DATA_SPARQLDB}:/data
    networks:
      - semtknet
  semtk-nodegroup:
    build:
      context: ./nodeGroupService
      dockerfile: Dockerfile
      args:
        http_proxy: $http_proxy
        https_proxy: $https_proxy
    image: ${REGISTRY}semtk-nodegroup${TAG}
    ports:
      - ${PORT_NODEGROUP_SERVICE}:8080
    networks:
      - semtknet

  semtk-nodegroup-store:
    build:
      context: ./nodeGroupStoreService
      dockerfile: Dockerfile
      args:
        http_proxy: $http_proxy
        https_proxy: $https_proxy
    image: ${REGISTRY}semtk-nodegroup-store${TAG}
    environment:
      - storeIngestorLocation
      - storeIngestorPort
      - storeTemplateLocation
      - storeIngestorProtocol
      - storeSparqlServiceServer
      - storeSparqlServicePort
      - storeSparqlServiceProtocol
      - storeSparqlServiceEndpoint
      - storeSparqlServerAndPort
      - storeSparqlServerDataSet
      - storeSparqlServerType
      - storeSparqlServiceUser
      - storeSparqlServicePass
    ports:
      - ${PORT_NODEGROUPSTORE_SERVICE}:8080
    networks:
      - semtknet
  
  semtk-ontology-info:
    build:
      context: ./ontologyInfoService
      dockerfile: Dockerfile
      args:
        http_proxy: $http_proxy
        https_proxy: $https_proxy
    image: ${REGISTRY}semtk-ontology-info${TAG}
    environment:
      - oinfoLoggingEnabled
      - oinfoLoggingProtocol
      - oinfoLoggingServer
      - oinfoLoggingPort
      - oinfoLoggingServiceLocation
      - oinfoApplicationLogName
    ports:
      - ${PORT_ONTOLOGYINFO_SERVICE}:8080
    networks:
      - semtknet

  semtk-sparqlgraph-status:
    build:
      context: ./sparqlGraphStatusService
      dockerfile: Dockerfile
      args:
        http_proxy: $http_proxy
        https_proxy: $https_proxy
    image: ${REGISTRY}semtk-sparqlgraph-status${TAG}
    environment:
      - statusJobEndpointType
      - statusJobEndpointDomain
      - statusJobEndpointServerUrl
      - statusJobEndpointDataset
      - statusJobEndpointUsername
      - statusJobEndpointPassword
      - statusJobMaxWaitMsec
      - statusLoggingEnabled
      - statusLoggingProtocol
      - statusLoggingServer
      - statusLoggingPort
      - statusLoggingServiceLocation
      - statusApplicationLogName
    ports:
      - ${PORT_SPARQLGRAPH_STATUS_SERVICE}:8080 
    networks:
      - semtknet

  semtk-sparqlgraph-results:
    build:
      context: ./sparqlGraphResultsService
      dockerfile: Dockerfile
      args:
        http_proxy: $http_proxy
        https_proxy: $https_proxy
    image: ${REGISTRY}semtk-sparqlgraph-results${TAG}
    environment:
      - resultsCleanUpThreadsEnabled
      - resultsCleanUpThreadsFrequency
      - resultsJobEndpointType
      - resultsJobEndpointDomain
      - resultsJobEndpointServerUrl
      - resultsJobEndpointDataset
      - resultsJobEndpointUsername
      - resultsJobEndpointPassword
      - resultsLoggingEnabled
      - resultsLoggingProtocol
      - resultsLoggingServer
      - resultsLoggingPort
      - resultsLoggingServiceLocation
      - resultsApplicationLogName
      - resultsBaseURL
      - resultsServiceURL
      - resultsFileLocation
      - resultsSampleLines
    ports:
      - ${PORT_SPARQLGRAPH_RESULTS_SERVICE}:8080
    networks:
      - semtknet

  semtk-hive:
    build:
      context: ./hiveService
      dockerfile: Dockerfile
      args:
        http_proxy: $http_proxy
        https_proxy: $https_proxy
    image: ${REGISTRY}semtk-hive${TAG}
    environment:
      - hiveUsername
      - hivePassword
    ports:
      - ${PORT_HIVE_SERVICE}:8080
    networks:
      - semtknet

  semtk-dispatch:
    build:
      context: ./sparqlExtDispatchService
      dockerfile: Dockerfile
      args:
        http_proxy: $http_proxy
        https_proxy: $https_proxy
    image: ${REGISTRY}semtk-dispatch${TAG}
    environment:
      - LOCATION_ADDITIONAL_DISPATCHER_JARS
      - dispatchSparqlServiceServer
      - dispatchSparqlServicePort
      - dispatchSparqlServiceProtocol
      - dispatchSparqlServiceEndpoint
      - dispatchEdcSparqlServerAndPort
      - dispatchEdcSparqlServerDataset
      - dispatchEdcSparqlServerType
      - RESULTS_SERVICE_PROTOCOL
      - RESULTS_SERVICE_HOST
      - PORT_SPARQLGRAPH_RESULTS_SERVICE
      - dispatchStatusServiceProtocol
      - dispatchStatusServiceServer
      - dispatchStatusServicePort
      - dispatchDispatcherClassName
    ports:
      - ${PORT_DISPATCH_SERVICE}:8080
    networks:
      - semtknet

  semtk-nodegroup-execution:
    build:
      context: ./nodeGroupExecutionService
      dockerfile: Dockerfile
      args:
        http_proxy: $http_proxy
        https_proxy: $https_proxy
    image: ${REGISTRY}semtk-nodegroup-execution${TAG}
    environment:
      - nodeGroupExecutionNgStoreProtocol
      - nodeGroupExecutionNgStoreServer
      - nodeGroupExecutionNgStorePort
      - nodeGroupExecutionDispatchProtocol
      - nodeGroupExecutionDispatchServer
      - nodeGroupExecutionDispatchPort
      - RESULTS_SERVICE_PROTOCOL
      - RESULTS_SERVICE_HOST
      - PORT_SPARQLGRAPH_RESULTS_SERVICE
      - nodeGroupExecutionStatusProtocol
      - nodeGroupExecutionStatusServer
      - nodeGroupExecutionStatusPort
      - nodeGroupExecutionIngestProtocol
      - nodeGroupExecutionIngestServer
      - nodeGroupExecutionIngestPort
    ports:
      - ${PORT_NODEGROUPEXECUTION_SERVICE}:8080
    networks:
      - semtknet

  semtk-sparql-query:
    build:
      context: ./sparqlQueryService
      dockerfile: Dockerfile
      args:
        http_proxy: $http_proxy
        https_proxy: $https_proxy
    image: ${REGISTRY}semtk-sparql-query${TAG}
    environment:
    ports:
      - ${PORT_SPARQL_QUERY_SERVICE}:8080
    networks:
      - semtknet

  semtk-ingestion:
    build:
      context: ./sparqlGraphIngestionService
      dockerfile: Dockerfile
      args:
        http_proxy: $http_proxy
        https_proxy: $https_proxy
    image: ${REGISTRY}semtk-ingestion${TAG}
    environment:
      - ingestionSparqlUserName
      - ingestionSparqlPassword
      - ingestionBatchSize
      - ingestionLoggingEnabled
      - ingestionLoggingProtocol
      - ingestionLoggingServer
      - ingestionLoggingPort
      - ingestionLoggingServiceLocation
      - ingestionApplicationName
    ports:
      - ${PORT_INGESTION_SERVICE}:8080
    networks:
      - semtknet

  semtk-sparqlgraph-web:
    build:
      context: ./sparqlGraphWeb
      dockerfile: Dockerfile
      args:
        http_proxy: $http_proxy
        https_proxy: $https_proxy
    image: ${REGISTRY}semtk-sparqlgraph-web${TAG}
    environment:
      - INGEST_URL
      - QUERY_URL
      - STATUS_URL
      - RESULTS_URL
      - DISPATCHER_URL
      - HIVE_URL
      - NGSTORE_URL
      - OINFO_URL
      - NGEXEC_URL
      - NG_URL
    ports:
      - ${PORT_SPARQLGRAPH_WEB}:8080
    networks:
      - semtknet

networks:
  semtknet:
    driver: bridge

