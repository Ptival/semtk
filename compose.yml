version: '3'

services:

  semtk-sparqldb:
    build:
      context: ./sparqlDB
      dockerfile: Dockerfile
      args:
        http_proxy: $http_proxy
        https_proxy: $https_proxy
    image: ${REGISTRY}semtk-sparqldb${TAG}
    environment:
      - http_proxy
      - https_proxy
      - no_proxy
      - DBA_PASSWORD=${PWD_SPARQLDB}
      - GRAPH_SPARQL_UPDATE=true
      - DEFAULT_GRAPH=http://research.ge.com
      - VIRT_Parameters_DirsAllowed=/
      - VIRT_SPARQL_MaxQueryCostEstimationTime=40000
      - VIRT_SPARQL_MaxQueryExecutionTime=300
    ports:
      - ${PORT_SPARQLDB}:8890
      - 1111:1111
    volumes:
      - ${DATA_SPARQLDB}:/data
    networks:
      - semtknet
  semtk-nodegroup:
    build:
      context: ./nodeGroupService
      dockerfile: Dockerfile
      args:
        http_proxy: $http_proxy
        https_proxy: $https_proxy
    image: ${REGISTRY}semtk-nodegroup${TAG}
    environment:
      - NODEGROUP_SERVICE_MULTIPART_MAXFILESIZE
      - PORT_NODEGROUP_SERVICE
    ports:
      - ${PORT_NODEGROUP_SERVICE}:${PORT_NODEGROUP_SERVICE}
    networks:
      - semtknet

  semtk-nodegroup-store:
    build:
      context: ./nodeGroupStoreService
      dockerfile: Dockerfile
      args:
        http_proxy: $http_proxy
        https_proxy: $https_proxy
    image: ${REGISTRY}semtk-nodegroup-store${TAG}
    environment:
      - NODEGROUPSTORE_SERVICE_MULTIPART_MAXFILESIZE
      - INGESTION_SERVICE_HOST
      - PORT_INGESTION_SERVICE
      - INGESTION_SERVICE_PROTOCOL
      - storeTemplateLocation
      - SPARQLQUERY_SERVICE_HOST
      - PORT_SPARQL_QUERY_SERVICE
      - SPARQLQUERY_SERVICE_PROTOCOL
      - SPARQLQUERY_SERVICE_ENDPOINT_AUTH
      - SERVICES_DATASET_SERVER_URL
      - storeSparqlServerDataDataset
      - storeSparqlServerModelDataset
      - storeSparqlServerDomain
      - SERVICES_DATASET_ENDPOINT_TYPE
      - SPARQLQUERY_SERVICE_USER
      - SPARQLQUERY_SERVICE_PWD
      - PORT_NODEGROUPSTORE_SERVICE
    ports:
      - ${PORT_NODEGROUPSTORE_SERVICE}:${PORT_NODEGROUPSTORE_SERVICE}
    networks:
      - semtknet

  semtk-ontology-info:
    build:
      context: ./ontologyInfoService
      dockerfile: Dockerfile
      args:
        http_proxy: $http_proxy
        https_proxy: $https_proxy
    image: ${REGISTRY}semtk-ontology-info${TAG}
    environment:
      - oinfoLoggingEnabled
      - LOGGING_SERVICE_PROTOCOL
      - LOGGING_SERVICE_HOST
      - LOGGING_SERVICE_PORT
      - LOGGING_SERVICE_ENDPOINT
      - oinfoApplicationLogName
      - PORT_ONTOLOGYINFO_SERVICE
    ports:
      - ${PORT_ONTOLOGYINFO_SERVICE}:${PORT_ONTOLOGYINFO_SERVICE}
    networks:
      - semtknet

  semtk-sparqlgraph-status:
    build:
      context: ./sparqlGraphStatusService
      dockerfile: Dockerfile
      args:
        http_proxy: $http_proxy
        https_proxy: $https_proxy
    image: ${REGISTRY}semtk-sparqlgraph-status${TAG}
    environment:
      - SERVICES_DATASET_ENDPOINT_TYPE
      - SERVICES_DATASET_DOMAIN
      - SERVICES_DATASET_SERVER_URL
      - SERVICES_DATASET
      - SPARQLQUERY_SERVICE_USER
      - SPARQLQUERY_SERVICE_PWD
      - statusJobMaxWaitMsec
      - statusLoggingEnabled
      - LOGGING_SERVICE_PROTOCOL
      - LOGGING_SERVICE_HOST
      - LOGGING_SERVICE_PORT
      - LOGGING_SERVICE_ENDPOINT
      - statusApplicationLogName
      - PORT_SPARQLGRAPH_STATUS_SERVICE
    ports:
      - ${PORT_SPARQLGRAPH_STATUS_SERVICE}:${PORT_SPARQLGRAPH_STATUS_SERVICE}
    networks:
      - semtknet

  semtk-sparqlgraph-results:
    build:
      context: ./sparqlGraphResultsService
      dockerfile: Dockerfile
      args:
        http_proxy: $http_proxy
        https_proxy: $https_proxy
    image: ${REGISTRY}semtk-sparqlgraph-results${TAG}
    environment:
      - RESULTS_SERVICE_MULTIPART_MAXFILESIZE
      - RESULTS_SERVICE_MULTIPART_MAXREQUESTSIZE
      - resultsCleanUpThreadsEnabled
      - resultsCleanUpThreadsFrequency
      - SERVICES_DATASET_ENDPOINT_TYPE
      - SERVICES_DATASET_DOMAIN
      - SERVICES_DATASET_SERVER_URL
      - SERVICES_DATASET
      - SPARQLQUERY_SERVICE_USER
      - SPARQLQUERY_SERVICE_PWD
      - resultsLoggingEnabled
      - LOGGING_SERVICE_PROTOCOL
      - LOGGING_SERVICE_HOST
      - LOGGING_SERVICE_PORT
      - LOGGING_SERVICE_ENDPOINT
      - resultsApplicationLogName
      - resultsBaseURL
      - resultsServiceURL
      - resultsFileLocation
      - resultsSampleLines
      - PORT_SPARQLGRAPH_RESULTS_SERVICE
    ports:
      - ${PORT_SPARQLGRAPH_RESULTS_SERVICE}:${PORT_SPARQLGRAPH_RESULTS_SERVICE}
    networks:
      - semtknet

  semtk-hive:
    build:
      context: ./hiveService
      dockerfile: Dockerfile
      args:
        http_proxy: $http_proxy
        https_proxy: $https_proxy
    image: ${REGISTRY}semtk-hive${TAG}
    environment:
      - hiveUsername
      - hivePassword
      - PORT_HIVE_SERVICE
    ports:
      - ${PORT_HIVE_SERVICE}:${PORT_HIVE_SERVICE}
    networks:
      - semtknet

  semtk-dispatch:
    build:
      context: ./sparqlExtDispatchService
      dockerfile: Dockerfile
      args:
        http_proxy: $http_proxy
        https_proxy: $https_proxy
    image: ${REGISTRY}semtk-dispatch${TAG}
    environment:
      - LOCATION_ADDITIONAL_DISPATCHER_JARS
      - SPARQLQUERY_SERVICE_HOST
      - PORT_SPARQL_QUERY_SERVICE
      - SPARQLQUERY_SERVICE_PROTOCOL
      - SPARQLQUERY_SERVICE_ENDPOINT
      - SERVICES_DATASET_SERVER_URL
      - SERVICES_DATASET
      - SERVICES_DATASET_ENDPOINT_TYPE
      - RESULTS_SERVICE_PROTOCOL
      - RESULTS_SERVICE_HOST
      - PORT_SPARQLGRAPH_RESULTS_SERVICE
      - STATUS_SERVICE_PROTOCOL
      - STATUS_SERVICE_HOST
      - PORT_SPARQLGRAPH_STATUS_SERVICE
      - DISPATCHER_CLASS_NAME
      - PORT_DISPATCH_SERVICE
      - SPARQLQUERY_SERVICE_ENDPOINT_AUTH
      - SPARQLQUERY_SERVICE_USER
      - SPARQLQUERY_SERVICE_PWD
    ports:
      - ${PORT_DISPATCH_SERVICE}:${PORT_DISPATCH_SERVICE}
    networks:
      - semtknet

  semtk-nodegroup-execution:
    build:
      context: ./nodeGroupExecutionService
      dockerfile: Dockerfile
      args:
        http_proxy: $http_proxy
        https_proxy: $https_proxy
    image: ${REGISTRY}semtk-nodegroup-execution${TAG}
    environment:
      - NODEGROUPSTORE_SERVICE_PROTOCOL
      - NODEGROUPSTORE_SERVICE_HOST
      - PORT_NODEGROUPSTORE_SERVICE
      - DISPATCH_SERVICE_PROTOCOL
      - DISPATCH_SERVICE_HOST
      - PORT_DISPATCH_SERVICE
      - RESULTS_SERVICE_PROTOCOL
      - RESULTS_SERVICE_HOST
      - PORT_SPARQLGRAPH_RESULTS_SERVICE
      - STATUS_SERVICE_PROTOCOL
      - STATUS_SERVICE_HOST
      - PORT_SPARQLGRAPH_STATUS_SERVICE
      - INGESTION_SERVICE_PROTOCOL
      - INGESTION_SERVICE_HOST
      - PORT_INGESTION_SERVICE
      - PORT_NODEGROUPEXECUTION_SERVICE
      - SERVICES_DATASET_ENDPOINT_TYPE
      - SERVICES_DATASET_DOMAIN
      - SERVICES_DATASET_SERVER_URL
      - SERVICES_DATASET
      - SPARQLQUERY_SERVICE_USER
      - SPARQLQUERY_SERVICE_PWD
    ports:
      - ${PORT_NODEGROUPEXECUTION_SERVICE}:${PORT_NODEGROUPEXECUTION_SERVICE}
    networks:
      - semtknet

  semtk-sparql-query:
    build:
      context: ./sparqlQueryService
      dockerfile: Dockerfile
      args:
        http_proxy: $http_proxy
        https_proxy: $https_proxy
    image: ${REGISTRY}semtk-sparql-query${TAG}
    environment:
      - PORT_SPARQL_QUERY_SERVICE
    ports:
      - ${PORT_SPARQL_QUERY_SERVICE}:${PORT_SPARQL_QUERY_SERVICE}
    networks:
      - semtknet

  semtk-ingestion:
    build:
      context: ./sparqlGraphIngestionService
      dockerfile: Dockerfile
      args:
        http_proxy: $http_proxy
        https_proxy: $https_proxy
    image: ${REGISTRY}semtk-ingestion${TAG}
    environment:
      - INGESTION_SERVICE_MULTIPART_MAXFILESIZE
      - SPARQLQUERY_SERVICE_USER
      - SPARQLQUERY_SERVICE_PWD
      - ingestionBatchSize
      - ingestionLoggingEnabled
      - LOGGING_SERVICE_PROTOCOL
      - LOGGING_SERVICE_HOST
      - LOGGING_SERVICE_PORT
      - LOGGING_SERVICE_ENDPOINT
      - ingestionApplicationName
      - PORT_INGESTION_SERVICE
    ports:
      - ${PORT_INGESTION_SERVICE}:${PORT_INGESTION_SERVICE}
    networks:
      - semtknet

  semtk-sparqlgraph-web:
    build:
      context: ./sparqlGraphWeb
      dockerfile: Dockerfile
      args:
        http_proxy: $http_proxy
        https_proxy: $https_proxy
    image: ${REGISTRY}semtk-sparqlgraph-web${TAG}
    environment:
      - INGEST_URL
      - QUERY_URL
      - STATUS_URL
      - RESULTS_URL
      - DISPATCHER_URL
      - HIVE_URL
      - NGSTORE_URL
      - OINFO_URL
      - NGEXEC_URL
      - NG_URL
      - WEB_PROTOCOL
      - WEB_INGESTION_HOST
      - WEB_INGESTION_PORT
      - WEB_SPARQL_QUERY_HOST
      - WEB_SPARQL_QUERY_PORT
      - WEB_STATUS_HOST
      - WEB_STATUS_PORT
      - WEB_RESULTS_HOST
      - WEB_RESULTS_PORT
      - WEB_DISPATCH_HOST
      - WEB_DISPATCH_PORT
      - WEB_HIVE_HOST
      - WEB_HIVE_PORT
      - WEB_NODEGROUPSTORE_HOST
      - WEB_NODEGROUPSTORE_PORT
      - WEB_ONTOLOGYINFO_HOST
      - WEB_ONTOLOGYINFO_PORT
      - WEB_NODEGROUPEXECUTION_HOST
      - WEB_NODEGROUPEXECUTION_PORT
      - WEB_NODEGROUP_HOST
      - WEB_NODEGROUP_PORT
    ports:
      - ${PORT_SPARQLGRAPH_WEB}:8080
    networks:
      - semtknet

networks:
  semtknet:
    driver: bridge

