server.port=${PORT_DISPATCH_SERVICE}
server.ssl.enabled=${SSL_ENABLED}
server.ssl.key-store-type=${SSL_KEY_STORE_TYPE}
server.ssl.key-store=${SSL_KEY_STORE}
server.ssl.key-store-password=${SSL_KEY_STORE_PASSWORD}

# The sparql service is needed to bootstrap everything else
dispatch.sparqlServiceServer=${SPARQLQUERY_SERVICE_HOST}
dispatch.sparqlServicePort=${PORT_SPARQL_QUERY_SERVICE}
dispatch.sparqlServiceProtocol=${SPARQLQUERY_SERVICE_PROTOCOL}
dispatch.sparqlServiceEndpoint=${SPARQLQUERY_SERVICE_ENDPOINT}

dispatch.sparqlServiceAuthEndpoint=${SPARQLQUERY_SERVICE_ENDPOINT_AUTH}
dispatch.sparqlServiceUser=${SPARQLQUERY_SERVICE_USER}
dispatch.sparqlServicePass=${SPARQLQUERY_SERVICE_PWD}

dispatch.edcSparqlServerAndPort=${SERVICES_DATASET_SERVER_URL}
dispatch.edcSparqlServerDataset=${SERVICES_DATASET}
dispatch.edcSparqlServerType=${SERVICES_DATASET_ENDPOINT_TYPE}

dispatch.oinfoServiceProtocol=${ONTOLOGYINFO_SERVICE_PROTOCOL}
dispatch.oinfoServiceServer=${ONTOLOGYINFO_SERVICE_HOST}
dispatch.oinfoServicePort=${PORT_ONTOLOGYINFO_SERVICE}

dispatch.resultsServiceProtocol=${RESULTS_SERVICE_PROTOCOL}
dispatch.resultsServiceServer=${RESULTS_SERVICE_HOST}
dispatch.resultsServicePort=${PORT_SPARQLGRAPH_RESULTS_SERVICE}

dispatch.statusServiceProtocol=${STATUS_SERVICE_PROTOCOL}
dispatch.statusServiceServer=${STATUS_SERVICE_HOST}
dispatch.statusServicePort=${PORT_SPARQLGRAPH_STATUS_SERVICE}

# passthrough dispatcher
dispatch.dispatcherClassName=${DISPATCHER_CLASS_NAME}


auth.settingsFilePath=${AUTH_SETTINGS_FILE_PATH}
auth.logPath=${AUTH_LOG_PATH}
auth.refreshFreqSeconds=${AUTH_REFRESH_FREQ_SEC}
